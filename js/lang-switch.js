// Ïñ∏Ïñ¥ Ï†ÑÌôò Í∏∞Îä•
class LanguageSwitch {
    constructor() {
        this.currentLang = this.getSavedLanguage();
        this.init();
    }

    init() {
        // Ï¶âÏãú Ï†ÄÏû•Îêú Ïñ∏Ïñ¥ Ï†ÅÏö© (DOMÏù¥ Î°úÎìúÎêòÍ∏∞ Ï†ÑÏóêÎèÑ)
        this.applyLanguageImmediately();
        
        // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ï†ÄÏû•Îêú Ïñ∏Ïñ¥ Ï†ÅÏö©
        this.applyLanguage(this.currentLang);
        this.updateActiveButton();
        
        // Ïù¥Î≤§Ìä∏ ÏúÑÏûÑÏùÑ ÏÇ¨Ïö©Ìïú Ïñ∏Ïñ¥ Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Îì±Î°ù
        this.setupEventDelegation();
    }

    // Ïù¥Î≤§Ìä∏ ÏúÑÏûÑÏúºÎ°ú ÎèôÏ†Å ÏöîÏÜåÎèÑ Ï≤òÎ¶¨
    setupEventDelegation() {
        document.body.addEventListener('click', (e) => {
            // .lang-btn ÌÅ¥ÎûòÏä§Îßå Í∞êÏßÄ
            const isLangButton = e.target.classList.contains('lang-btn') || 
                                e.target.closest('.lang-btn');
            
            if (isLangButton) {
                const button = e.target.classList.contains('lang-btn') ? 
                              e.target : e.target.closest('.lang-btn');
                
                // ÌòÑÏû¨ Ïñ∏Ïñ¥Ïùò Î∞òÎåÄ Ïñ∏Ïñ¥Î°ú ÌÜ†Í∏Ä
                const currentLang = this.getSavedLanguage();
                const toggleLang = currentLang === 'ko' ? 'en' : 'ko';
                
                console.log('üîÑ Ïñ∏Ïñ¥ Î≤ÑÌäº ÌÅ¥Î¶≠ Í∞êÏßÄ!');
                console.log('ÌÅ¥Î¶≠Îêú Î≤ÑÌäº:', button);
                console.log('Î≤ÑÌäº ÌÅ¥ÎûòÏä§:', button.className);
                console.log('ÌòÑÏû¨ Ïñ∏Ïñ¥:', currentLang, '‚Üí ÎåÄÏÉÅ Ïñ∏Ïñ¥:', toggleLang);
                
                this.switchLanguage(toggleLang);
                console.log('‚úÖ Ïñ∏Ïñ¥ ÌÜ†Í∏Ä ÏôÑÎ£å:', currentLang, '‚Üí', toggleLang);
            }
        });
    }

    // Ï¶âÏãú Ïñ∏Ïñ¥ Ï†ÅÏö© (DOM Î°úÎìú Ï†ÑÏóêÎèÑ Ïã§Ìñâ)
    applyLanguageImmediately() {
        // Ïù¥ÎØ∏ Î°úÎìúÎêú ÏöîÏÜåÎì§Ïóê Ï¶âÏãú Ï†ÅÏö©
        const elements = document.querySelectorAll('[data-kor][data-eng]');
        elements.forEach(element => {
            const korText = element.dataset.kor;
            const engText = element.dataset.eng;
            
            if (this.currentLang === 'ko') {
                if (korText.includes('<') && korText.includes('>')) {
                    element.innerHTML = korText;
                } else {
                    element.textContent = korText;
                }
            } else if (this.currentLang === 'en') {
                if (engText.includes('<') && engText.includes('>')) {
                    element.innerHTML = engText;
                } else {
                    element.textContent = engText;
                }
            }
        });
    }

    // Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóêÏÑú Ï†ÄÏû•Îêú Ïñ∏Ïñ¥ Í∞ÄÏ†∏Ïò§Í∏∞
    getSavedLanguage() {
        return localStorage.getItem('selectedLanguage') || 'ko';
    }

    // Ïñ∏Ïñ¥ Ï†ÄÏû•ÌïòÍ∏∞
    saveLanguage(lang) {
        localStorage.setItem('selectedLanguage', lang);
    }

    // Ïñ∏Ïñ¥ Ï†ÑÌôò Ïã§Ìñâ
    switchLanguage(lang) {
        this.currentLang = lang;
        this.saveLanguage(lang);
        this.applyLanguage(lang);
        this.updateActiveButton();
        
        // ÌûàÏñ¥Î°ú ÏÑπÏÖò ÎèôÏòÅÏÉÅ Ï†ÑÌôò (Î©îÏù∏ ÌéòÏù¥ÏßÄÏù∏ Í≤ΩÏö∞)
        if (typeof window.switchHeroVideo === 'function') {
            window.switchHeroVideo(lang);
        }
        
        // Ïñ∏Ïñ¥ Î≥ÄÍ≤Ω Ïù¥Î≤§Ìä∏ Î∞úÏÉù (Îã§Î•∏ Ïª¥Ìè¨ÎÑåÌä∏Îì§ÏóêÍ≤å ÏïåÎ¶º)
        const languageChangeEvent = new CustomEvent('languageChanged', {
            detail: { language: lang }
        });
        window.dispatchEvent(languageChangeEvent);
    }

    // ÌéòÏù¥ÏßÄÏùò Î™®Îì† ÌÖçÏä§Ìä∏ Î≥ÄÍ≤Ω
    applyLanguage(lang) {
        const elements = document.querySelectorAll('[data-kor][data-eng]');
        console.log('Ïñ∏Ïñ¥ Ï†ÅÏö© Ï§ë:', lang, 'ÎåÄÏÉÅ ÏöîÏÜå Ïàò:', elements.length);
        
        elements.forEach(element => {
            const korText = element.dataset.kor;
            const engText = element.dataset.eng;
            
            // Ïñ∏Ïñ¥ Î≤ÑÌäºÏù∏ÏßÄ ÌôïÏù∏ (ÎîîÎ≤ÑÍπÖÏö©)
            if (element.classList.contains('lang-btn')) {
                console.log('Ïñ∏Ïñ¥ Î≤ÑÌäº ÏóÖÎç∞Ïù¥Ìä∏:', element, 'Ïñ∏Ïñ¥:', lang, 'ÌÖçÏä§Ìä∏:', lang === 'ko' ? korText : engText);
            }
            
            if (lang === 'ko') {
                // HTML ÌÉúÍ∑∏Í∞Ä Ìè¨Ìï®Îêú Í≤ΩÏö∞ innerHTML ÏÇ¨Ïö©
                if (korText.includes('<') && korText.includes('>')) {
                    element.innerHTML = korText;
                } else {
                    element.textContent = korText;
                }
            } else if (lang === 'en') {
                // HTML ÌÉúÍ∑∏Í∞Ä Ìè¨Ìï®Îêú Í≤ΩÏö∞ innerHTML ÏÇ¨Ïö©
                if (engText.includes('<') && engText.includes('>')) {
                    element.innerHTML = engText;
                } else {
                    element.textContent = engText;
                }
            }
        });
    }

    // ÌôúÏÑ±ÌôîÎêú Î≤ÑÌäº Ïä§ÌÉÄÏùº ÏóÖÎç∞Ïù¥Ìä∏
    updateActiveButton() {
        // Î™®Îì† .lang-btn ÌÅ¥ÎûòÏä§ Î≤ÑÌäºÎì§ÏùÑ forEachÎ°ú Ï≤òÎ¶¨
        const allLangButtons = document.querySelectorAll('.lang-btn');
        
        allLangButtons.forEach(button => {
            // Î™®Îì† Î≤ÑÌäºÏóêÏÑú active ÌÅ¥ÎûòÏä§ Ï†úÍ±∞
            button.classList.remove('active');
            
            // ÌòÑÏû¨ Ïñ∏Ïñ¥ÏôÄ ÏùºÏπòÌïòÎäî Î≤ÑÌäºÏóêÎßå active ÌÅ¥ÎûòÏä§ Ï∂îÍ∞Ä
            if (button.dataset.lang === this.currentLang) {
                button.classList.add('active');
            }
        });
        
        // ÎèôÏ†ÅÏúºÎ°ú Ï∂îÍ∞ÄÎêú Î≤ÑÌäºÎì§ÎèÑ Ï≤òÎ¶¨
        setTimeout(() => {
            const newButtons = document.querySelectorAll('.lang-btn');
            newButtons.forEach(button => {
                if (button.dataset.lang === this.currentLang) {
                    button.classList.add('active');
                } else {
                    button.classList.remove('active');
                }
            });
        }, 100);
    }
}

// Ïñ∏Ïñ¥ Ï†ÑÌôò Í∏∞Îä•ÏùÑ Ï†ÑÏó≠ÏúºÎ°ú Ï¥àÍ∏∞ÌôîÌïòÎäî Ìï®Ïàò
function initLanguageSwitch() {
    if (window.languageSwitchInstance) {
        return; // Ïù¥ÎØ∏ Ï¥àÍ∏∞ÌôîÎêú Í≤ΩÏö∞ Ï§ëÎ≥µ Ïã§Ìñâ Î∞©ÏßÄ
    }
    
    // Ïñ∏Ïñ¥ Î≤ÑÌäºÏù¥ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏
    const langButtons = document.querySelectorAll('.lang-btn');
    if (langButtons.length > 0) {
        window.languageSwitchInstance = new LanguageSwitch();
        console.log('Ïñ∏Ïñ¥ Ï†ÑÌôò Í∏∞Îä•Ïù¥ Ï¥àÍ∏∞ÌôîÎêòÏóàÏäµÎãàÎã§.');
    } else {
        console.log('Ïñ∏Ïñ¥ Î≤ÑÌäºÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. Ìó§Îçî Î°úÎìú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï©ÎãàÎã§.');
    }
}

// ÌéòÏù¥ÏßÄ Î°úÎìú Ï†ÑÏóê ÎØ∏Î¶¨ Ïñ∏Ïñ¥ Ï†ÅÏö©
function preApplyLanguage() {
    const savedLang = localStorage.getItem('selectedLanguage') || 'ko';
    const elements = document.querySelectorAll('[data-kor][data-eng]');
    
    elements.forEach(element => {
        const korText = element.dataset.kor;
        const engText = element.dataset.eng;
        
        if (savedLang === 'ko') {
            if (korText.includes('<') && korText.includes('>')) {
                element.innerHTML = korText;
            } else {
                element.textContent = korText;
            }
        } else if (savedLang === 'en') {
            if (engText.includes('<') && engText.includes('>')) {
                element.innerHTML = engText;
            } else {
                element.textContent = engText;
            }
        }
    });
}

// ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ï¶âÏãú Ïñ∏Ïñ¥ Ï†ÅÏö©
document.addEventListener('DOMContentLoaded', () => {
    preApplyLanguage();
    initLanguageSwitch();
});

// Ìó§Îçî Î°úÎìú ÌõÑÏóêÎèÑ Ï¥àÍ∏∞Ìôî ÏãúÎèÑ (ÎèôÏ†Å Î°úÎî© ÎåÄÏùë)
setTimeout(() => {
    preApplyLanguage();
    initLanguageSwitch();
}, 1000);

// MutationObserverÎ°ú ÏÉàÎ°úÏö¥ ÏöîÏÜå Í∞êÏßÄ Î∞è Ïñ∏Ïñ¥ Ï†ÅÏö©
const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
        if (mutation.type === 'childList') {
            const addedNodes = Array.from(mutation.addedNodes);
            
            // ÏÉàÎ°ú Ï∂îÍ∞ÄÎêú ÏöîÏÜåÏóê Ïñ∏Ïñ¥ Ï†ÅÏö©
            addedNodes.forEach(node => {
                if (node.nodeType === 1) {
                    const savedLang = localStorage.getItem('selectedLanguage') || 'ko';
                    const elements = node.querySelectorAll ? node.querySelectorAll('[data-kor][data-eng]') : [];
                    
                    elements.forEach(element => {
                        const korText = element.dataset.kor;
                        const engText = element.dataset.eng;
                        
                        if (savedLang === 'ko') {
                            if (korText.includes('<') && korText.includes('>')) {
                                element.innerHTML = korText;
                            } else {
                                element.textContent = korText;
                            }
                        } else if (savedLang === 'en') {
                            if (engText.includes('<') && engText.includes('>')) {
                                element.innerHTML = engText;
                            } else {
                                element.textContent = engText;
                            }
                        }
                    });
                }
            });
            
            // Ïñ∏Ïñ¥ Î≤ÑÌäºÏù¥ Ï∂îÍ∞ÄÎêòÎ©¥ Ï¥àÍ∏∞Ìôî
            const hasLangButtons = addedNodes.some(node => 
                node.nodeType === 1 && 
                (node.querySelector && node.querySelector('.lang-btn'))
            );
            
            if (hasLangButtons) {
                initLanguageSwitch();
            }
        }
    });
});

// Ï†ÑÏ≤¥ body Í∞êÏßÄ ÏãúÏûë
observer.observe(document.body, { childList: true, subtree: true });